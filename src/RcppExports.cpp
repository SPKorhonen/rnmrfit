// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// fit_lineshape_1d
double fit_lineshape_1d(const Rcpp::NumericVector x_val, const Rcpp::ComplexVector y_val, Rcpp::NumericVector par, Rcpp::NumericVector lb, Rcpp::NumericVector ub, Rcpp::NumericMatrix basis_val, Rcpp::List eq, Rcpp::List ineq, int n_peaks, int n_baseline, int n_phase);
RcppExport SEXP _rnmrfit_fit_lineshape_1d(SEXP x_valSEXP, SEXP y_valSEXP, SEXP parSEXP, SEXP lbSEXP, SEXP ubSEXP, SEXP basis_valSEXP, SEXP eqSEXP, SEXP ineqSEXP, SEXP n_peaksSEXP, SEXP n_baselineSEXP, SEXP n_phaseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type x_val(x_valSEXP);
    Rcpp::traits::input_parameter< const Rcpp::ComplexVector >::type y_val(y_valSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type basis_val(basis_valSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type eq(eqSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type ineq(ineqSEXP);
    Rcpp::traits::input_parameter< int >::type n_peaks(n_peaksSEXP);
    Rcpp::traits::input_parameter< int >::type n_baseline(n_baselineSEXP);
    Rcpp::traits::input_parameter< int >::type n_phase(n_phaseSEXP);
    rcpp_result_gen = Rcpp::wrap(fit_lineshape_1d(x_val, y_val, par, lb, ub, basis_val, eq, ineq, n_peaks, n_baseline, n_phase));
    return rcpp_result_gen;
END_RCPP
}
// lineshape_1d
void lineshape_1d(Rcpp::NumericVector x_direct, Rcpp::NumericMatrix y, Rcpp::NumericVector par);
RcppExport SEXP _rnmrfit_lineshape_1d(SEXP x_directSEXP, SEXP ySEXP, SEXP parSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x_direct(x_directSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    lineshape_1d(x_direct, y, par);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rnmrfit_fit_lineshape_1d", (DL_FUNC) &_rnmrfit_fit_lineshape_1d, 11},
    {"_rnmrfit_lineshape_1d", (DL_FUNC) &_rnmrfit_lineshape_1d, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rnmrfit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
